version: '3.3'

#
# The Firefly III Data Importer will ask you for the Firefly III URL and a "Client ID".
# You can generate the Client ID at http://localhost/profile (after registering)
# The Firefly III URL is: http://app:8080
#
# Other URL's will give 500 | Server Error
#

services:
  app:
    image: fireflyiii/core:latest
    hostname: app
    container_name: firefly_core
    networks:
      - firefly
      - traefik
    restart: always
    volumes:
      - firefly_upload:/var/www/html/storage/upload
    env_file: ./env/.app.env
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.firefly.rule=Host(`${FQDN_URL}`)"
    - "traefik.http.routers.firefly.tls=true"
    - "traefik.http.routers.firefly.middlewares=secureHeaders@file"
    - "traefik.http.services.firefly.loadbalancer.server.port=8080"
    # ports:
    #   - '80:8080'
    depends_on:
      - db

  importer:
    image: fireflyiii/data-importer:latest
    hostname: importer
    restart: always
    container_name: firefly_importer
    networks:
      - firefly
      - traefik
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.fireimp.rule=Host(`${FQDN_URL}`)"
    - "traefik.http.routers.fireimp.tls=true"
    - "traefik.http.routers.fireimp.middlewares=secureHeaders@file"
    - "traefik.http.services.fireimp.loadbalancer.server.port=8080"
    # ports:
    #   - '81:8080'
    depends_on:
      - app
    env_file: ./env/.importer.env

  db:
    image: mariadb
    hostname: db
    container_name: firefly_db
    networks:
      - firefly
    restart: always
    env_file: ./env/.db.env
    volumes:
      - firefly_db:/var/lib/mysql


  cron:
    #
    # To make this work, set STATIC_CRON_TOKEN in your .env file or as an environment variable and replace REPLACEME below
    # The STATIC_CRON_TOKEN must be *exactly* 32 characters long
    #
    image: alpine
    container_name: firefly_iii_cron
    restart: always
    command: sh -c "echo \"0 3 * * * wget -qO- http://app:8080/api/v1/cron/REPLACEME\" | crontab - && crond -f -L /dev/stdout"
    networks:
      - firefly
volumes:
    firefly_upload:
    firefly_db:

networks:
  firefly:
    driver: bridge
  traefik:
    external: true
